pipeline {
    agent any
    environment {
        // Environment variables for MySQL connection
        MYSQL_HOST = 'mysql_db'
        MYSQL_USER = 'mec'
        MYSQL_PASSWORD = 'root'
        MYSQL_DB = 'db_bimbelonline'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'WDC-V2', url: 'https://github.com/JunandaDeyastusesa/komputasi-awan-1.git'
            }
        }
        stage('Create Docker Network') {
            steps {
                script {
                    // Create the Docker network if it doesn't exist
                    def networkExists = sh(script: "docker network ls --filter name=my-network -q", returnStdout: true).trim()
                    if (networkExists.isEmpty()) {
                        echo 'Creating Docker network: my-network'
                        sh 'docker network create my-network'
                    } else {
                        echo 'Docker network "my-network" already exists.'
                    }
                }
            }
        }
        stage('Run MySQL Container') {
            steps {
                script {
                    // Pull MySQL image and run container
                    docker.image('junandad/mysql:8.0').run('-d --name mysql ' +
                        '-e MYSQL_ROOT_PASSWORD=root ' +
                        '-e MYSQL_DATABASE=db_bimbelonline ' +
                        '-e MYSQL_USER=mec ' +
                        '-e MYSQL_PASSWORD=root ' +
                        '--network=my-network')
                    echo 'MySQL container is running...'
                }
            }
        }
        stage('Run PHP Container') {
            steps {
                script {
                    // Pull PHP image and run container
                    docker.image('junandad/dashboard-mec-php:try').run('-d --name dashboard-mec-php ' +
                        '-p 8083:80 ' +
                        '--network=my-network ' +
                        '-v $WORKSPACE:/var/www/html')
                    echo 'PHP container is running...'
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline execution failed.'
        }
    }
}
