pipeline {
    agent any
    environment {
        // Environment variables for MySQL connection
        MYSQL_HOST = 'mysql_db'    // Nama service MySQL yang didefinisikan dalam Docker Compose
        MYSQL_USER = 'mec'
        MYSQL_PASSWORD = 'root'
        MYSQL_DB = 'db_bimbelonline'
    }
    stages {
        stage('Checkout Repository') {
            steps {
                git branch: 'WDC-V2', url: 'https://github.com/JunandaDeyastusesa/komputasi-awan-1.git'
            }
        }
        stage('Build and Run Docker Compose') {
            steps {
                script {
                    // Jalankan Docker Compose untuk membangun dan menjalankan layanan
                    sh 'docker-compose down' // Pastikan tidak ada container lama yang berjalan
                    sh 'docker-compose up -d --build'
                }
            }
        }
        stage('Verify Services') {
            steps {
                script {
                    // Tunggu hingga MySQL siap
                    echo 'Waiting for MySQL service to be ready...'
                    sleep(20) // Tunggu agar MySQL siap (atau gunakan healthcheck lebih kompleks)

                    // Verifikasi bahwa container PHP berjalan
                    sh 'docker ps | grep php'

                    // Verifikasi bahwa container MySQL berjalan
                    sh 'docker ps | grep mysql_db'
                }
            }
        }
    }
    post {
        success {
            slackSend channel: '#build-testing', color: 'good', message: 'Pipeline berhasil! Layanan berhasil berjalan dengan Docker Compose.'
        }
        failure {
            slackSend channel: '#build-testing', color: 'danger', message: 'Pipeline gagal! Periksa konfigurasi atau log Docker Compose.'
        }
    }
}
