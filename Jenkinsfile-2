pipeline {
    agent any
    environment {
        // Environment variables for MySQL connection
        MYSQL_HOST = 'mysql_db'    // Nama service MySQL yang didefinisikan dalam Docker Compose
        MYSQL_USER = 'mec'
        MYSQL_PASSWORD = 'root'
        MYSQL_DB = 'db_bimbelonline'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'WDC-V2', url: 'https://github.com/JunandaDeyastusesa/komputasi-awan-1.git'
            }
        }
        stage('Pull Image From Dockerhub') {
            steps {
                echo 'Images pulled successfully...'
            }
        }
        stage('Run MySQL') {
            steps {
                script {
                    // Stop and remove any existing MySQL container with the same name
                    sh 'docker rm -f mysql || true'

                    // Pull MySQL image
                    def mysql = docker.image('mysql:8.0')
                    mysql.pull()

                    // Run MySQL container with unique name and network configuration
                    def mysqlContainer = mysql.run('-d --name mysql ' +
                        '-e MYSQL_ROOT_PASSWORD=root ' +
                        '-e MYSQL_DATABASE=db_bimbelonline ' +
                        '-e MYSQL_USER=mec ' +
                        '-e MYSQL_PASSWORD=root ' +
                        '--network my-network') // Ensure MySQL and PHP are on the same network
                    echo 'MySQL container is running...'

                    // Wait for MySQL to be ready
                    echo 'Waiting for MySQL to be ready...'
                    sleep(20) // Wait 20 seconds to allow MySQL to start
                }
            }
        }
        stage('Run PHP') {
            steps {
                script {
                    // Pull PHP environment image
                    def phpEnv = docker.image('junandad/dashboard-mec-php:try')
                    phpEnv.pull()

                    // Run PHP container and link it to MySQL, ensuring it is on the same network
                    def phpContainer = phpEnv.run('-d --name phpEnv ' +
                        '-e MYSQL_HOST=${MYSQL_HOST} ' +
                        '-e MYSQL_USER=${MYSQL_USER} ' +
                        '-e MYSQL_PASSWORD=${MYSQL_PASSWORD} ' +
                        '-e MYSQL_DB=${MYSQL_DB} ' +
                        '-p 6000:80 ' +
                        '--network my-network ' +
                        '-w /var/www/html') // Ensure the PHP container has the correct working directory
                    echo 'PHP environment container is running...'
                }
            }
        }
    }
    post {
        success {
            slackSend channel: '#build-testing', color: 'good', message: 'Pipeline berhasil!'
        }
        failure {
            slackSend channel: '#build-testing', color: 'danger', message: 'Pipeline gagal!'
        }
    }
}
